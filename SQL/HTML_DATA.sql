INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (1, 1, '웹 서비스 개발', '<b>클라이언트</b>는 <b>웹브라우저</b>라고도 부릅니다.(여러분이 이미 사용하고 있는 IE, Chrome 등등..)<br /> <b>웹브라우저</b>에 어떤 웹 페이지의 주소를 입력하는 일은 그 주소가 가리키는 <b> 서버 컴퓨터</b>에 웹 페이지를 요청하는 것입니다.<br /><br /> 예를 들어 웹브라우저의 주소 창에 <span class = "url">www.example.com/index.html</span>을 입력한다면,<br /> <span class="url">www.example.com</span>이라는 주소가 가리키는 서버 컴퓨터에 저장되어 있는 <b>index.html</b>을 요청하는 것입니다.<br /><br /> 요청을 받은 서버 컴퓨터는 클라이언트에게 알맞은 웹 페이지를 보내주게 됩니다.', 1, 'false');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (2, 2, 'HTML의 의미', '<div class="smalltitle"><p>HyperText Markup Language.</p></div><br /> <b>HyperText</b><br /> 문서들이 링크로 연결되어 있는 것을 HyperText라고 합니다.<br /> 의미 그대로, HTML에서는 문서와 문서를 링크로 연결할 수 있습니다.<br /><br /> <b>Markup</b><br /> 문서가 화면에서 어떻게 보여야 할 것인지를 나타내기 위해, 또는 구조를 나타내기 위해 문서에 삽입되는 문자나 기호를 말합니다.<br /> HTML에서는 <b>‘태그’</b>를 이용하여 문서를 구성합니다. 이 ‘태그’는 다음 장에서 자 세히 알아보도록 합시다. <br /><br /> HTML의 뜻은 별로 중요하지 않습니다. 그냥 살짝 훑고 간다는 느낌으로 넘어갑시다.', 1, 'false');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (3, 3, '태그', '<div class="smalltitle"><p>HyperText Markup Language.</p></div><br /> <b>HyperText</b><br /> 문서들이 링크로 연결되어 있는 것을 HyperText라고 합니다.<br /> 의미 그대로, HTML에서는 문서와 문서를 링크로 연결할 수 있습니다.<br /><br /> <b>Markup</b><br /> 문서가 화면에서 어떻게 보여야 할 것인지를 나타내기 위해, 또는 구조를 나타내기 위해 문서에 삽입되는 문자나 기호를 말합니다.<br /> HTML에서는 <b>‘태그’</b>를 이용하여 문서를 구성합니다. 이 ‘태그’는 다음 장에서 자 세히 알아보도록 합시다. <br /><br /> HTML의 뜻은 별로 중요하지 않습니다. 그냥 살짝 훑고 간다는 느낌으로 넘어갑시다.', 1, 'true');
INSERT INTO `HTML_Coding` (`course_id`, `instruction`) VALUES (3, 'p 태그를 이용해서 &lsquo;Hello HTML&rsquo;을 표시해 보세요.');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (4, 4, 'HTML 문서의 구조', '1. HTML 문서는 <code>&lt;html&gt;</code> 태그로 시작되고 끝납니다.<br /> 2. <code>&lt;head&gt;</code>태그 안에는 페이지에 대한 정보가 들어갑니다.<br /> 3. <code>&lt;head&gt;</code>태그 안에 <code>&lt;title&gt;</code>태그를 삽입함으 로써 페이지 제목을 설정할 수 있습니다.<br /> 4. <code>&lt;body&gt;</code>태그 안에 웹페이지에 실제로 보여지는 내용을 넣을 수 있습니다.<br /><br /> ※ <code>&lt;head&gt;</code>태그 안의 <code>&lt;meta charset=&ldquo;utf-8&rdquo;&gt;</code>은 문자 인코딩 방식을 UTF-8로 하겠다는 뜻입 니다. 한글이 깨지지 않게 하기 위해 사용됩니다.<br /> ※ 여기서 말하는 페이지 제목이란 브라우저가 인식하는 페이지 제목을 말합니다.<br />', 1, 'true');
INSERT INTO `HTML_Coding` (`course_id`, `instruction`) VALUES (4, ' 아무런 내용도 없는 HTML 문서를 작성해 보세요. ');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (5, 5, '&lt;h1&gt;, &lt;h2&gt;, ... 태그', '<code>&lt;h1&gt;h1 태그입니다.&lt;/h1&gt;</code><br /> <code>&lt;h2&gt;h2 태그입니다.&lt;/h2&gt;</code><br /> <code>&lt;h3&gt;h3 태그입니다.&lt;/h3&gt;</code><br /> <code>&lt;h4&gt;h4 태그입니다.&lt;/h4&gt;</code><br /> <code>&lt;h5&gt;h5 태그입니다.&lt;/h5&gt;</code><br /> <code>&lt;h6&gt;h6 태그입니다.&lt;/h6&gt;</code><br /><br /> HTML에는 여섯 단계의 제목 태그가 있습니다.<br /> &lt;h1&gt;태그는 주제목에 사용됩니다.<br /> &lt;h2&gt;태그는 부제목에 사용됩니다.<br /><br /> 서로 다른 웹브라우저는 서로 다른 크기로 콘텐츠를 표시합니다.<br /> 텍스트의 크기, 색, 모양을 설정하는 것은 CSS를 배울 때 알아보겠습니다.<br /> ', 1, 'true');
INSERT INTO `HTML_Coding` (`course_id`, `instruction`) VALUES (5, '<p> 페이지 제목 : 나의 첫 HTML 페이지<br /> 주제목 : Hello HTML<br /> 부제목: 제목은 항상 새로운 줄에서 시작한다.<br /> 단락 내용 : 단락 또한 새로운 줄에서 시작한다.<br /><br /> 내용을 표시하는 HTML 문서를 만들어 보세요.<br /> &lt;h1&gt;, &lt;h2&gt;, &lt;p&gt;태그 등을 활용하세요.<br />');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (6, 6, '&lt;h1&gt;, &lt;h2&gt;, ... 태그', '1. HTML 문서는 <code>&lt;html&gt;</code> 태그로 시작되고 끝납니다.<br /> 2. <code>&lt;head&gt;</code>태그 안에는 페이지에 대한 정보가 들어갑니다.<br /> 3. <code>&lt;head&gt;</code>태그 안에 <code>&lt;title&gt;</code>태그를 삽입함으 로써 페이지 제목을 설정할 수 있습니다.<br /> 4. <code>&lt;body&gt;</code>태그 안에 웹페이지에 실제로 보여지는 내용을 넣을 수 있습니다.<br /><br /> ※ <code>&lt;head&gt;</code>태그 안의 <code>&lt;meta charset=&ldquo;utf-8&rdquo;&gt;</code>은 문자 인코딩 방식을 UTF-8로 하겠다는 뜻입 니다. 한글이 깨지지 않게 하기 위해 사용됩니다.<br /> ※ 여기서 말하는 페이지 제목이란 브라우저가 인식하는 페이지 제목을 말합니다. <br />', 1, 'true');
INSERT INTO `HTML_Coding` (`course_id`, `instruction`) VALUES (6, 'naver 링크를 google 링크로 바꾸어 보세요.');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (7, 7, '&lt;b&gt; 태그와 &lt;i&gt;태그', '<div class="smalltitle"> <code>&lt;b&gt;</code>와 <code>&lt;/b&gt;</code>태그로 감싼 단어는 굵게(bold) 표시됩니다.<br /> </div> 중요한 단어들을 강조하고 싶을 때 사용합니다.<br /><br /> [예시]<br /> <code>안녕하세요, &lt;b&gt;홍길동&lt;/b&gt;입니다.</code><br /><br /> <div class="smalltitle"> <code>&lt;i&gt;</code>와 <code>&lt;/i&gt;</code>태그로 감싼 단어는 기울임체(italic)로 표시됩니다.<br /><br /> </div> 전문용어, 외국어 등을 작성할 때 많이 사용합니다.<br /><br /> [예시] <code>저는 &lt;i&gt;학생&lt;/i&gt;입니다.</code>', 1, 'true');
INSERT INTO `HTML_Coding` (`course_id`, `instruction`) VALUES (7, '&lt;b&gt;태그와 &lt;i&gt;태그를 이용하여 5장에서 작성했던 코드를 자유롭게 꾸며 보세요.');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (8, 8, '&lt;br&gt; 태그와 &lt;hr&gt; 태그', '<div class="smalltitle"> &lt;br /&gt; </div> HTML에서는 두 개 이상의 공백이나 줄 바꿈을 입력하더라도 하나의 공백으로 처리합니다.<br /> 따라서 한 단락 내에서 줄을 바꾸고 싶을 때는 <code>&lt;br&gt;</code>태그를 사용합니다.<br /><br /> [예시]<br /> <code> &lt;p&gt;나 보기가 역겨워&lt;br /&gt;가실 때에는&lt;br /&gt;죽어도 아니 눈물 흘리오리다&lt;/p&gt;</code><br /><br /> <div class="smalltitle"> &lt;hr /&gt; </div> 화제가 변경되었을 때 내용을 구분하기 위해서는 가로줄이 필요할 때가 있습니다.<br /> HTML에서는 <code>&lt;hr&gt;</code> 태그로 가로줄을 나타낼 수 있습니다.<br /><br /> [예시]<br /> <code> &lt;p&gt;13살 소년, 파이 값을 8만 자리까지 외우다.&lt;/p&gt;<br /> &lt;hr /&gt;<br /> &lt;p&gt;돼지고기 피해야 할 체질, 닭고기 피해야 할 체질&lt;/p&gt; </code><br /><br /> 열기 태그와 닫기 태그 사이에 컨텐츠가 들어가지 않는 요소(elements)가 있습니다. 이러한 요소를 빈 요소(empty element)라고 부릅니다.<br /> [예시]의 빈 요소의 닫기 태그에는 공백과 함께 슬래시(‘/’)가 위치합니다.<br /> 일부 개발자는 공백과 슬래시를 생략하기도 하지만 작성해주는 것이 좋은 습관입니다.<br />', 1, 'true');
INSERT INTO `HTML_Coding` (`course_id`, `instruction`) VALUES (8, '<code>&lt;br&gt;</code> 태그와 <code>&lt;hr&gt;</code> 태그를 이용해서 내용을 적절하게 분리해 보세요.');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (9, 9, '&lt;ul&gt;과 &lt;ol&gt;태그', ' 목록을 사용해야 하는 경우가 많이 있습니다.<br /> 목록을 표시할 수 있는 대표적인 태그로는 <code>&lt;ul&gt;</code>과 <code>&lt;ol&gt;</code>이 있습니다.<br /><br /> <code>&lt;ul&gt;</code>은 순서 없는 목록, <code>&lt;ul&gt;</code>은 순서 있는 목록을 표시할 때 사용합니다.<br /> 목록 안의 항목들은 <code>&lt;li&gt;</code>태그를 사용하여 표시합니다. li는 <i>list item</i>의 약자입니다.<br /><br /> [예시]<br /> <code> &lt;ul&gt;<br /> &nbsp;&nbsp;&lt;li&gt;수학학원 숙제 하기&lt;/li&gt;<br /> &nbsp;&nbsp;&lt;li&gt;영어 단어 외우기&lt;/li&gt;<br /> &nbsp;&nbsp;&lt;li&gt;하루에 물 2리터씩 마시기&lt;/li&gt;<br /> &lt;/ul&gt;<br /><br /> &lt;ol&gt;<br /> &nbsp;&nbsp;&lt;li&gt;적당한 양의 밀가루와 물, 계란을 섞는다.&lt;/li&gt;<br /> &nbsp;&nbsp;&lt;li&gt;쪽파를 알맞게 잘라 반죽에 넣는다.&lt;/li&gt;<br /> &nbsp;&nbsp;&lt;li&gt;프라이팬에 기름을 두르고 만들어놓은 반죽을 올린다.&lt;/li&gt;<br /> &lt;/ol&gt;<br /> </code>', 1, 'true');
INSERT INTO `HTML_Coding` (`course_id`, `instruction`) VALUES (9, '<code>&lt;ul&gt;</code> 태그와 <code>&lt;ol&gt;</code> 태그를 활용해서 문서를 만들어보세요.<br /> <code>&lt;ul&gt;</code> 태그 안에 다시 <code>&lt;ul&gt;</code> 태그를 중첩시키면 어떤 일이 일어날까요?<br />');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (10, 10, '폼', '지금까지 HTML을 이용해서 사용자에게 보여 주는 기능에 대해 알아봤습니다.<br /> 하지만 우리가 아는 많은 웹 페이지들은 사용자가 값을 입력하고, 그에 따른 상호 작용을 할 수 있었습니다.<br /> 예를 들면 검색, 로그인처럼요.<br /><br /> 우선 사용자의 입력을 받기 위해서 HTML에서는 ‘<b>폼</b>’이라는 것을 사용합니다. 그러나,<br /> 간단하게 말씀드리자면, <span class="underlined">HTML만으로는 사용자와 서버 간의 상호 작용을 할 수 없습니다.</span><br /> 상호 작용을 하기 위해서는 서버 사이드 언어, 예를 들면 PHP와 같은 언어가 필요합니다.<br /> 이번 장에서는 사용자와의 상호작용을 위해 사이트에 ‘보여주는 부분’인 폼을 아주 간략하게 알아보겠습니다.<br /><br /> 다양한 폼 컨트롤은 ‘HTML 태그 완전 정복’ 강좌에서 만나보세요.<br /> <div class="smalltitle"> &lt;form&gt; </div> 폼을 만들기 위해서는 <code>&lt;form&gt;</code>태그를 사용합니다.<br /> <code>&lt;form&gt;</code>태그에는 항상 <code>action</code> 속성이 있으며 <code>method</code>, <code>id</code> 등의 속성이 같이 있을 때가 많습니다.<br /> <code>action</code> 속성은 폼에 입력한 정보를 수신할 서버의 URL을 담습니다.<br /> <code>action</code> 속성에는 <code>get</code> 또는 <code>post</code>를 지정할 수 있습니다.<br /> <code>get</code>은 간단한 정보를 주고받을 때 사용하고, <code>post</code>는 좀 더 길거나 민감한 데이터를 주고받을 때 사용합니다.<br /><br /> <div class="smalltitle"> &lt;input&gt; </div> <code>&lt;input&gt;</code> 태그는 여러가지 폼 컨트롤을 만드는 데 사용합니다. <code>type</code> 속성은 입력의 종류를 결정합니다.<br /> <code>type</code> 속성의 값이 text일 때 한 줄의 텍스트를 입력받을 수 있습니다.<br /> <code>type</code> 속성의 값이 submit이라면 전송 버튼을 만들 수 있습니다.<br /> <code>name속성은</code> 서버에서 어떤 폼 컨트롤의 값인지 알 수 있게 해 주는 역할을 합니다. ', 1, 'false');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (11, 11, '독타입과 주석', '    <div class="smalltitle"> 독타입 </div> HTML은 현재 최신 버전인 HTML5 말고도 여러 버전이 존재합니다.<br /> 그러므로 HTML 문서는 무슨 버전인지 웹브라우저에게 알려주기 위해 DOCTYPE 선언을 맨 처음에 포함해야 합니다.<br /><br /> HTML5의 DOCTYPE은 이렇게 선언합니다.<br /> <code>&lt;!DOCTYPE html&gt;</code><br /><br /> <div class="smalltitle"> 주석 달기 </div> 주석은 실제로 사용자에게 보여지거나 어떤 기능을 담당하지 않는, 오직 사람이 읽기에만 목적을 둔 텍스트입니다.<br /> 주석을 잘 달면 코드를 이해하기 쉬워질 수 있습니다.<br /> 주석은 <code>&lt;!-- 주석 내용 --&gt;</code> 의 형식을 따릅니다.<br /> ', 1, 'true');
INSERT INTO `HTML_Coding` (`course_id`, `instruction`) VALUES (11, '주어진 HTML 문서에 알맞은 독타입을 선언하고 자유롭게 주석을 달아 보세요.');
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (12, 12, '&lt;div&gt;, &lt;span&gt; 태그와 class 속성', '<code>&lt;div&gt;</code>, <code>&lt;span&gt;</code> 태그의 특별한 기능은 없습니다. 그런데 왜 배우냐고요?<br /> 코드를 <code>&lt;div&gt;</code>와 <code>&lt;/div&gt;</code> 태그로 감싼다면 <b>페이지의 요소 구분을 보다 명확히 할 수 있기 때문입니다.</b><br /> 예를 들어 쇼핑몰 사이트를 만든다고 치면, 로그인 부분과 상품 목록 부분, 광고 부분 등등 다양한 구획들로 나눌 수 있습니다.<br /> 이처럼 비슷한 목적을 가진 태그들을 묶는다면, 나중에 CSS로 페이지를 꾸미기 쉬워집니다.<br /><br /> <code>class</code> 속성은 모든 HTML 태그에 추가될 수 있습니다. 이러한 속성을 <b>전역 속성</b>이라고도 합니다.<br /><br /> <code>class</code> 속성은 대부분 CSS에서 가리키는 데 쓰입니다.<br /> 같은 두 개의 <code>&lt;div&gt;</code> 태그 안의 요소들이라고 해도, <code>&lt;div&gt;</code>태그의 <code>class</code> 속성이 다르다면 CSS에서 두 <code>&lt;div&gt;</code>요소를 구분해서 스타일을 줄 수 있습니다.<br /><br /> ', 1, 'true');
INSERT INTO `HTML_Coding` (`course_id`, `instruction`) VALUES (12, '<code>&lt;article&gt;</code> 태그 안의 내용들을 단락별, 내용별로 <code>&lt;div&gt;</code>와 <code>&lt;span&gt;</code> 태그로 묶어 보세요.<br /> 각 요소별로 <code>class</code> 속성도 지정해 보세요.');

/*
INSERT INTO `HTML` (`id`, `course_id`, `title`, `desc`, `img_count`, `has_coding`) VALUES (장 번호, 장 번호, '제목', '내용', 이미지개수, '코딩지시여부');
INSERT INTO `HTML_Coding` (`course_id`, `instruction`) VALUES (장 번호, '지시사항');
*/
